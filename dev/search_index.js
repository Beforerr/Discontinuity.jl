var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Functions exported:","category":"page"},{"location":"api/#Discontinuity.PVI","page":"API Reference","title":"Discontinuity.PVI","text":"PVI(B, n, ::Val{dim})\n\nCompute the Partial Variance of Increments (PVI) for a time series B along dimension dim with lag n. Standard deviations σi of magnetic field increments are computed every time units.\n\nmathrmPVI_t τ = fracΔ mathbfB(t τ)sqrtlangle  Δ mathbfB(t τ) ^2rangle\n\nReturns a Vector of length N - τ containing PVI values.\n\n\n\n\n\n","category":"function"},{"location":"api/#Discontinuity.compute_anisotropy_params!-Tuple{Any, Vararg{Pair}}","page":"API Reference","title":"Discontinuity.compute_anisotropy_params!","text":"computeanisotropyparams!(df, :ion => (:Tppara, :Tpperp), :electron => (:Tepara, :Teperp))\n\n\n\n\n\n","category":"method"},{"location":"api/#Discontinuity.detect_variance-NTuple{4, Any}","page":"API Reference","title":"Discontinuity.detect_variance","text":"detect_variance(f, tmin, tmax, tau; split=1, kwargs...)\n\nApply detect_variance on a time series f(tmin, tmax)\n\nOptional splitting into multiple chunks to improve performance and memory efficiency.\n\n\n\n\n\n","category":"method"},{"location":"api/#Discontinuity.detect_variance-Tuple{Any, Any, Any, Val}","page":"API Reference","title":"Discontinuity.detect_variance","text":"detect_variance(data, times, period, sparse_num, d; kwargs...)\ndetect_variance(data::AbstractDimArray, period, sparse_num; dim=Ti, kwargs...)\n\nDetect discontinuities based on variance analysis.\n\nKeyword arguments:\n\nn=2: Number of periods to split the time series into\nstd_threshold=2: Threshold for standard deviation\nfluc_threshold=1: Threshold for index fluctuation\ndiff_threshold=0.1: Threshold for difference\n\n\n\n\n\n","category":"method"},{"location":"api/#Discontinuity.ids_finder-Tuple{AbstractArray, Any, Vararg{Any}}","page":"API Reference","title":"Discontinuity.ids_finder","text":"ids_finder(data, tau, [V, n]; kwargs...)\n\nFind the discontinuities in the time series data with the given tau.\n\nProvide additional arguments V and n to calculate the features of the events.\n\n\n\n\n\n","category":"method"},{"location":"api/#Discontinuity.ids_finder-Tuple{Any, Any, Any, Any, Vararg{Any}}","page":"API Reference","title":"Discontinuity.ids_finder","text":"ids_finder(f, tmin, tmax, tau, args...; split=1, kwargs...)\n\nApply ids_finder on a time series f(tmin, tmax)\n\nOptional splitting into multiple chunks to improve performance and memory efficiency.\n\n\n\n\n\n","category":"method"},{"location":"api/#Discontinuity.load-Tuple{Any}","page":"API Reference","title":"Discontinuity.load","text":"load(path)\n\nLoad the data from the given path\n\n\n\n\n\n","category":"method"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Types exported:","category":"page"},{"location":"api/#Discontinuity.HyperbolicTangentFit","page":"API Reference","title":"Discontinuity.HyperbolicTangentFit","text":"HyperbolicTangentFit{T}\n\nA hyperbolic tangent fit.\n\ny = A tanh((x - μ)  σ) + B\n\n\n\n\n\n","category":"type"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"#Overview","page":"Introduction","title":"Overview","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"A Julia package for reading and processing discontinuity datasets produced by the DiscontinuityPy Python package.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"To install the package, run the following command in the Julia REPL:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using Pkg\nPkg.develop(url=\"https://github.com/Beforerr/Discontinuity.jl\")","category":"page"}]
}
